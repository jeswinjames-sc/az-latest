import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { BeneficiariesFGControls, PayoutBanksFGControls } from '@fg-controls/e-app';
import { REGEXP } from '@utils/constants/regexp/regexp';
import * as _ from 'lodash';

export const PolicyInfoFormGroup: FormGroup = new FormBuilder().group({
    basicPlan: [],
    payMode: [],
    sumAssured: [],
    policyAmount: [],
    amountOfPayment: [],
    paymentScheme: [null, [Validators.required]],
    paymentSchemeNote: [],
    // accidentalDeath: [],
    // criticalIllness: [],
    // flexiFundRider: [],
    // waiverOfPremium: [],
    // payorsBenefitRider: [],
    TR_ADB_PHP_0_PNBSumAssured: [],
    TR_ADD_PHP_0_PNBSumAssured: [],
    TR_ADDD_0_PHP_PNBSumAssured: [],
    TR_CI_0_PHP_PNBSumAssured: [],
    TR_DDR_PHP_0_PNBSumAssured: [],
    TR_DDR10_PHP_0_PNBSumAssured: [],
    TR_DDR15_PHP_0_PNBSumAssured: [],
    TR_DDR5_PHP_0_PNBSumAssured: [],
    TR_DHA_0_PHP_PNBSumAssured: [],
    TR_DTR10_PHP_0_PNBSumAssured: [],
    TR_DTR15_PHP_0_PNBSumAssured: [],
    TR_DTR20_PHP_0_PNBSumAssured: [],
    TR_FFR_PHP_0_PNBSumAssured: [],
    TR_PBR_PHP_0_PNBSumAssured: [],
    TR_SAR_PHP_0_PNBSumAssured: [],
    TR_TPD_0_PHP_PNBSumAssured: [],
    TR_TR1_PHP_0_PNBSumAssured: [],
    TR_TR10_PHP_0_PNBSumAssured: [],
    TR_TR15_PHP_0_PNBSumAssured: [],
    TR_TR20_PHP_0_PNBSumAssured: [],
    TR_TR5_PHP_0_PNBSumAssured: [],
    TR_WOP_PHP_0_PNBSumAssured: [],
    UL_ADD_PHP_0_HSBC_AZSumAssured: [],
    UL_ADD_PHP_0_PNBSumAssured: [],
    UL_WPCI05_PHP_0_AGENCYSumAssured: [],
    UL_WPCI05_USD_0_AGENCYSumAssured: [],
    UL_WPCI10_PHP_0_AGENCYSumAssured: [],
    UL_WPCI10_USD_0_AGENCYSumAssured: [],
    UL_ADD_PHP_0_PNB_AZSumAssured: [],
    UL_ADD_PHP_0_WST_LTG_AZSumAssured: [],
    UL_ADD_PHP_0_AGENCYSumAssured: [],
    UL_ADD_USD_0_AGENCYSumAssured: [],
    UL_ADD_USD_0_HSBC_AZSumAssured: [],
    UL_ADD_USD_0_PNBSumAssured: [],
    UL_ADD_USD_0_PNB_AZSumAssured: [],
    UL_ADD_USD_0_WST_LTG_AZSumAssured: [],
    UL_CI100_PHP_0_HSBC_AZSumAssured: [],
    UL_CI100_PHP_0_PNBSumAssured: [],
    UL_CI100_PHP_0_PNB_AZSumAssured: [],
    UL_CI100_PHP_0_WST_LTG_AZSumAssured: [],
    UL_CI100_USD_0_HSBC_AZSumAssured: [],
    UL_CI100_USD_0_PNBSumAssured: [],
    UL_CI100_USD_0_PNB_AZSumAssured: [],
    UL_CI100_USD_0_WST_LTG_AZSumAssured: [],
    UL_CI100HD_PHP_0_PNBSumAssured: [],
    UL_CI100HD_USD_0_PNBSumAssured: [],
    UL_WPCI05_PHP_0_PNBSumAssured: [],
    UL_WPCI05_PHP_0_PNB_AZSumAssured: [],
    UL_WPCI05_USD_0_PNBSumAssured: [],
    UL_WPCI05_USD_0_PNB_AZSumAssured: [],
    UL_WPCI10_PHP_0_PNBSumAssured: [],
    UL_WPCI10_USD_0_PNBSumAssured: [],
    UL_WPCI10_USD_0_PNB_AZSumAssured: [],
    UL_WPCI10_PHP_0_PNB_AZSumAssured: [],
    UL_WPCI20_PHP_0_AGENCY_AZSumAssured: [],
    UL_WPCI20_USD_0_AGENCY_AZSumAssured: [],
    UL_WPCI65_PHP_0_AGENCY_AZSumAssured: [],
    UL_WPCI65_USD_0_AGENCY_AZSumAssured: [],
    UL_WPCI20_PHP_0_PNBSumAssured: [],
    UL_WPCI20_PHP_0_PNB_AZSumAssured: [],
    UL_WPCI05_PHP_0_WST_LTG_AZSumAssured: [],
    UL_WPCI05_USD_0_WST_LTG_AZSumAssured: [],
    UL_WPCI10_PHP_0_WST_LTG_AZSumAssured: [],
    UL_WPCI10_USD_0_WST_LTG_AZSumAssured: [],
    UL_WPCI20_PHP_0_WST_LTG_AZSumAssured: [],
    UL_WPCI20_USD_0_WST_LTG_AZSumAssured: [],
    UL_WPCI65_PHP_0_WST_LTG_AZSumAssured: [],
    UL_WPCI65_USD_0_WST_LTG_AZSumAssured: [],
    UL_WPCI20_USD_0_AGENCYSumAssured: [],
    UL_WPCI05_PHP_0_AGENCY_AZSumAssured: [],
    UL_WPCI05_USD_0_AGENCY_AZSumAssured: [],
    UL_WPCI10_PHP_0_AGENCY_AZSumAssured: [],
    UL_WPCI10_USD_0_AGENCY_AZSumAssured: [],
    UL_WPCI20_USD_0_PNB_AZSumAssured: [],
    UL_WPCI20_PHP_0_AGENCYSumAssured: [],
    UL_WPCI65_PHP_0_PNBSumAssured: [],
    UL_WPCI65_PHP_0_PNB_AZSumAssured: [],
    UL_WPCI65_PHP_0_AGENCYSumAssured: [],
    UL_WPCI65_USD_0_AGENCYSumAssured: [],
    UL_WPCI65_USD_0_PNBSumAssured: [],
    UL_WPCI65_USD_0_PNB_AZSumAssured: [],
    UL_COLA3_PHP_0_AGENCYSumAssured: [],
    UL_COLA3_USD_0_AGENCYSumAssured: [],
    UL_COLA5_PHP_0_AGENCYSumAssured: [],
    UL_COLA5_USD_0_AGENCYSumAssured: [],
    UL_COLA10_PHP_0_AGENCYSumAssured: [],
    UL_COLA10_USD_0_AGENCYSumAssured: [],
    UL_COLA3_PHP_0_HSBCSumAssured: [],
    UL_COLA3_USD_0_HSBCSumAssured: [],
    UL_COLA5_PHP_0_HSBCSumAssured: [],
    UL_COLA5_USD_0_HSBCSumAssured: [],
    UL_COLA10_USD_0_HSBCSumAssured: [],
    UL_COLA3_PHP_0_PNBSumAssured: [],
    UL_COLA3_USD_0_PNBSumAssured: [],
    UL_COLA5_PHP_0_PNBSumAssured: [],
    UL_COLA5_USD_0_PNBSumAssured: [],
    UL_COLA10_PHP_0_PNBSumAssured: [],
    UL_COLA10_USD_0_PNBSumAssured: [],
    UL_COLA3_PHP_0_WST_LTGSumAssured: [],
    UL_COLA3_USD_0_WST_LTGSumAssured: [],
    UL_COLA5_PHP_0_WST_LTGSumAssured: [],
    UL_COLA5_USD_0_WST_LTGSumAssured: [],
    UL_COLA10_PHP_0_WST_LTGSumAssured: [],
    UL_COLA10_PHP_0_HSBCSumAssured: [],
    UL_COLA10_USD_0_WST_LTGSumAssured: [],
    UL_PBR_PHP_0_AGENCYSumAssured: [],
    UL_PBR_USD_0_AGENCYSumAssured: [],
    UL_PBR5_PHP_0_AGENCYSumAssured: [],
    UL_PBR5_USD_0_AGENCYSumAssured: [],
    UL_PBR_PHP_0_PNBSumAssured: [],
    UL_PBR_USD_0_PNBSumAssured: [],
    UL_PBR5_PHP_0_PNBSumAssured: [],
    UL_PBR5_USD_0_PNBSumAssured: [],
    UL_PBR5_PHP_0_PNB_AZSumAssured: [],
    UL_PBR5_USD_0_PNB_AZSumAssured: [],
    UL_PBR10_PHP_0_AGENCYSumAssured: [],
    UL_PBR10_USD_0_AGENCYSumAssured: [],
    UL_PBR10_PHP_0_PNBSumAssured: [],
    UL_PBR10_USD_0_PNBSumAssured: [],
    UL_PBR10_PHP_0_PNB_AZSumAssured: [],
    UL_PBR10_USD_0_PNB_AZSumAssured: [],
    TR_SPR_WWF_PHP_0_PNBSumAssured: [],
    TR_APR_PHP_0_PNBSumAssured:[],
    UL_ESSENTIAL_1000_PHP_0_AGENCYSumAssured: [],
    UL_ESSENTIAL_2500_PHP_0_AGENCYSumAssured: [],
    UL_ESSENTIAL_5000_PHP_0_AGENCYSumAssured: [],
    UL_ESSENTIAL_500_PHP_0_AGENCYSumAssured: [],
    UL_ESSENTIAL_PLUS_1000_PHP_0_AGENCYSumAssured: [],
    UL_ESSENTIAL_PLUS_2500_PHP_0_AGENCYSumAssured: [],
    UL_ESSENTIAL_PLUS_5000_PHP_0_AGENCYSumAssured: [],
    UL_ESSENTIAL_PLUS_500_PHP_0_AGENCYSumAssured: [],
    dividendOption: [],
    premiumDefaultOption: [null, [Validators.required]],
    settlementOption: [null, [Validators.required]],
    deathBenefitType: [],
    withTopUp: [],
    topUpAmount: [],

    DFADPBFDirection: [], DFADPBFTopUp: [],
    DIGFDirection: [], DIGFTopUp: [],
    DIGDPFDirection: [], DIGDPFTopUp: [],
    DGEFDirection: [], DGEFTopUp: [],
    DFABFDirection: [], DFABFTopUp: [],
    DFIFDirection: [], DFIFTopUp: [],
    DGLIDPFDirection: [], DGLIDPFTopUp: [],
    DGODPBFDirection:[], DGODPBFTopUp: [],
    DGRADPFDirection:[], DGRADPFTopUp: [],
    DAMIPDPFDirection: [], DAMIPDPFTopUp: [],
    DGEPFDirection: [], DGEPFTopUp: [],
    PBDPFDirection: [], PBDPFTopUp: [],
    PHGSEFDirection: [], PHGSEFTopUp: [],
    PHAMIPDPFDirection: [], PHAMIPDPFTopUp: [],
    PHGRADPFDirection: [], PHGRADPFTopUp: [],
    PHIAGDPFDirection: [], PHIAGDPFTopUp: [],
    PMSEFDirection: [], PMSEFTopUp: [],
    PODEFDirection: [], PODEFTopUp: [],
    PEFDirection: [], PEFTopUp: [],
    PFIFDirection: [], PFIFTopUp: [],
    PBFDirection: [], PBFTopUp: [],
    PDEFDirection: [], PDEFTopUp: [],
    PMMFDirection: [], PMMFTopUp: [],
    PHSGEDPFDirection: [], PHSGEDPFTopUp: [],
    PHDIDPFDirection: [], PHDIDPFTopUp: [],
    DSGEDPFDirection: [], DSGEDPFTopUp: [],
    PSPDPFDirection: [], PSPDPFTopUp: [],
    DSPDPFDirection: [], DSPDPFTopUp: [],
    DEPGFDirection: [], DEPGFTopUp: [],
    PEPGFDirection: [], PEPGFTopUp: [],
    

    payoutOption: [null, [Validators.required]],
    bankName: [null, [Validators.maxLength(50), Validators.required]],
    bankBranch: [null, [Validators.maxLength(50), Validators.required]],
    accountNumber: [null, [Validators.required]],
    accountCurrency: [null, Validators.required],
    jointAccount: [null, Validators.required],
    typeOfAccount: [null, [Validators.required]],
    bankAccountName: [null, [Validators.maxLength(160), Validators.required]],
    payoutBanks: new FormBuilder().array([]),
    beneficiaries: new FormBuilder().array([]),
    purpose: [null, [Validators.required]],
    otherPurpose: [null, Validators.pattern(REGEXP.NAME)]
});

export const BeneficiariesFormGroup: FormGroup = new FormBuilder().group(BeneficiariesFGControls)
export const PayoutBanksNameFormGroup: FormGroup = new FormBuilder().group(PayoutBanksFGControls)
